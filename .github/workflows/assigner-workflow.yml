name: Pull Request Assigner Completion Workflow

# read-write repo token
# access to secrets
on:
  workflow_run:
    workflows: ["Pull	Request Assigner"]
    types:
      - completed

permissions:
  contents: read

jobs:
  assignment:
    name: Pull Request Assignment
    runs-on: ubuntu-24.04
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'

    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "pr"
            })[0];
            var download = await github.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: matchArtifact.id,
              archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/pr.zip', Buffer.from(download.data));
      - run: unzip pr.zip

      - name: Check out source code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: 3.12
          cache: pip
          cache-dependency-path: scripts/requirements-actions.txt

      - name: Install Python packages
        run: |
          pip install -r scripts/requirements-actions.txt --require-hashes

      - name: Run assignment script
        env:
          GITHUB_TOKEN: ${{ secrets.ZB_PR_ASSIGNER_GITHUB_TOKEN }}
        run: |
          FLAGS="-v"
          FLAGS+=" -o ${{ github.event.repository.owner.login }}"
          FLAGS+=" -r ${{ github.event.repository.name }}"
          FLAGS+=" -M MAINTAINERS.yml"
          if [ "${{ github.event_name }}" = "pull_request_target" ]; then
            FLAGS+=" -P ${{ github.event.pull_request.number }} -c origin/${{ github.base_ref }}.."
          elif [ "${{ github.event_name }}" = "issues" ]; then
            FLAGS+=" -I ${{ github.event.issue.number }}"
          elif [ "${{ github.event_name }}" = "schedule" ]; then
            FLAGS+=" --modules"
          else
            echo "Unknown event: ${{ github.event_name }}"
            exit 1
          fi

          python3 scripts/set_assignees.py $FLAGS

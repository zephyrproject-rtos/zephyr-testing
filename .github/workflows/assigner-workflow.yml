name: Pull Request Assigner Completion Workflow

# read-write repo token
# access to secrets
on:
  workflow_run:
    workflows: ["Pull Request Assigner"]
    types:
      - completed

permissions:
  contents: read

jobs:
  assignment:
    name: Pull Request Assignment
    runs-on: ubuntu-24.04
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'

    steps:
      - name: Download artifacts
        id: download-artifacts
        uses: dawidd6/action-download-artifact@ac66b43f0e6a346234dd65d4d0c8fbb31cb316e5 # v11
        with:
          workflow: doc-build.yml
          run_id: ${{ github.event.workflow_run.id }}
          if_no_artifact_found: ignore

      - name: Load PR number
        if: steps.download-artifacts.outputs.found_artifact == 'true'
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            let fs = require("fs");
            let pr_number = Number(fs.readFileSync("./pr/NR"));
            core.exportVariable("PR_NUM", pr_number);

      - name: Check PR number
        if: steps.download-artifacts.outputs.found_artifact == 'true'
        id: check-pr
        uses: carpentries/actions/check-valid-pr@2e20fd5ee53b691e27455ce7ca3b16ea885140e8 # v0.15.0
        with:
          pr: ${{ env.PR_NUM }}
          sha: ${{ github.event.workflow_run.head_sha }}

      - name: Validate PR number
        if: |
          steps.download-artifacts.outputs.found_artifact == 'true' &&
          steps.check-pr.outputs.VALID != 'true'
        run: |
          echo "ABORT: PR number validation failed!"
          exit 1

      - name: Check out source code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: 3.12
          cache: pip
          cache-dependency-path: scripts/requirements-actions.txt

      - name: Install Python packages
        run: |
          pip install -r scripts/requirements-actions.txt --require-hashes

      - name: Run assignment script
        env:
          GITHUB_TOKEN: ${{ secrets.ZB_PR_ASSIGNER_GITHUB_TOKEN }}
        run: |
          FLAGS="-v"
          FLAGS+=" -o ${{ github.event.repository.owner.login }}"
          FLAGS+=" -r ${{ github.event.repository.name }}"
          FLAGS+=" -M MAINTAINERS.yml"
          if [ "${{ github.event_name }}" = "pull_request_target" ]; then
            FLAGS+=" -P ${{ github.event.pull_request.number }} -c origin/${{ github.base_ref }}.."
          elif [ "${{ github.event_name }}" = "issues" ]; then
            FLAGS+=" -I ${{ github.event.issue.number }}"
          elif [ "${{ github.event_name }}" = "schedule" ]; then
            FLAGS+=" --modules"
          else
            echo "Unknown event: ${{ github.event_name }}"
            exit 1
          fi

          python3 scripts/set_assignees.py $FLAGS
